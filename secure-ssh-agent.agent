#!/bin/sh
SSA_DIRECTORY="$HOME/.ssa"

if [ ! -d $SSA_DIRECTORY ] ; then
  echo "Directory '$SSA_DIRECTORY' not found" 1>&2
  exit 1
fi

TIMEOUT=10

DEFAULT_FILE="$SSA_DIRECTORY/.default"

DIALOG_TEXT="A SSH key has been requested. Please choose one, or cancel."

# find_keys() finds all keys and
find_keys() {

  KEYS_STRING=""
  DEFAULT_KEY=$(cat $DEFAULT_FILE 2> /dev/null)

  for KEY in $(find $SSA_DIRECTORY -name '*.pub'); do
    KEY_BASENAME=$(basename $KEY .pub)

    # Default key will be already selected in prompt
    if [ "$KEY_BASENAME" = "$DEFAULT_KEY" ] ; then
      DEFAULT="True"
    else
      DEFAULT="False"
    fi

    KEYS_STRING="$KEYS_STRING $DEFAULT $KEY_BASENAME"

  done
  echo $KEYS_STRING
}

# Find keys, and exit if none found
KEYS=$(find_keys)
if [ -z "$KEYS" ] ; then
  echo "No ssh keys found" 1>&2
  exit 1
fi

# Prompt user for key selection
SELECTED=$(zenity --list --radiolist --title "SSH key selection" --text="$DIALOG_TEXT" --column=Select --column=Key $KEYS 2> /dev/null)
KEY_FILE=$SSA_DIRECTORY/$SELECTED

# Exit if nothing selected
if [ -z $SELECTED ] ; then
  exit 1
fi

# Save default key selection
echo $SELECTED > $DEFAULT_FILE

# Make sure ssh-add is happy with permissions
chmod 0700 $SSA_DIRECTORY
chmod 0600 $SSA_DIRECTORY/*

# Start ssh-agent, add key
eval $(umask 066; ssh-agent) > /dev/null
ssh-add $KEY_FILE > /dev/null

if [ $TIMEOUT -gt 0 ] ; then
  timeout --foreground "$TIMEOUT" socat - UNIX-CONNECT:$SSH_AUTH_SOCK
else
  socat - UNIX-CONNECT:$SSH_AUTH_SOCK
fi

# Clean up
kill $SSH_AGENT_PID 2> /dev/null
